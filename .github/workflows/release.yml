name: RELEASE

on:
  push:
    branches: [ master ]

jobs:
  setup-environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

  lint:
    name: Eslint
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - name: Run linter
        run: yarn lint

  type-check:
    name: TypeScript
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - name: Run type checking
        run: yarn type-check

  test-and-coverage:
    name: Jest
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [lint, type-check]
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - name: Run test suite & generate coverage
        run: yarn test --coverage --ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Bump version, Generate Changelog, Publish to NPM
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [test-and-coverage]
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # We need this so standard-version can access
          # all previous commits.   
          fetch-depth: 0
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - name: Standard Version
        # I'd like to find a way to make this dynamic.
        # Have not found any system vars to access from
        # GitHub Actions so I might have to hack something
        # together.
        run: | 
          git config user.name Cody Brunner
          git config user.email rockchalkwushock@icloud.com
          yarn release --sign
      - name: Publish to npm
        uses: pascalgn/npm-publish-action@1.3.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
