name: PR

on:
  pull_request:
    branches: [ master ]

jobs:
  setup-environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

  lint:
    name: Eslint
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - run: yarn lint

  type-check:
    name: TypeScript
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - run: yarn type-check

  test:
    name: Jest
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [lint, type-check]
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - run: yarn test --ci
      
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [test]
    steps:
      - name: Get Yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - name: Load Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing dependencies
        run: yarn --frozen-lockfile
      - run: yarn build


